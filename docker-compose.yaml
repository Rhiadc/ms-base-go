version: '3.5'
services:
  api1: 
    build:
      context: .
    hostname: api1
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "80"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  # nginx: # Load Balancer
  #   image: nginx:latest
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - api1
  #     - api2
  #   ports:
  #     - "9999:9999"
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.25'
  #         memory: '0.5GB'

  db: 
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/data/postgres
    volumes:
     - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '1.5GB'

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: user@localhost.com
      PGADMIN_DEFAULT_PASSWORD: password  
    ports:
      - 5050:80
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin


volumes:
  pgdata: